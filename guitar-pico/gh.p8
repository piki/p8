pico-8 cartridge // http://www.pico-8.com
version 34
__lua__
screen="title"

function n(b,p,s)
	return {
		beat=b,
		pitch=p,
		string=s,
		played=false
	}
end
notes1={
	n(0,40,5),
	n(1,35,2),
	n(1.5,36,3),
	n(2,38,4),
	n(3,36,3),
	n(3.5,35,2),

	n(4,33,1),
	n(5,33,1),
	n(5.5,36,3),
	n(6,40,5),
	n(7,38,4),
	n(7.5,36,3),

	n(8,35,2),
	n(9,35,2),
	n(9.5,36,3),
	n(10,38,4),
	n(11,40,5),

	n(12,36,3),
	n(13,33,1),
	n(14,33,1),

	n(16.5,38,1),
	n(17.5,41,3),
	n(18,45,5),
	n(19,43,4),
	n(19.5,41,3),

	n(20,40,2),
	n(21.5,36,1),
	n(22,40,5),
	n(23,38,4),
	n(23.5,36,3),

	n(24,35,2),
	n(25,35,2),
	n(25.5,36,3),
	n(26,38,4),
	n(27,40,5),

	n(28,36,3),
	n(29,33,1),
	n(30,33,1),

	n(32,28,5),
	n(34,24,3),

	n(36,26,4),
	n(38,23,2),

	n(40,24,3),
	n(42,21,1),

	n(44,20,2),
	n(46,23,4),

	n(48,28,5),
	n(50,24,3),

	n(52,26,4),
	n(54,23,2),

	n(56,24,1),
	n(57,28,3),
	n(58,33,5),
	n(59,33,5),

	n(60,32,4),

	n(64,40,5),
	n(65,35,2),
	n(65.5,36,3),
	n(66,38,4),
	n(67,36,3),
	n(67.5,35,2),

	n(68,33,1),
	n(69,33,1),
	n(69.5,36,3),
	n(70,40,5),
	n(71,38,4),
	n(71.5,36,3),

	n(72,35,2),
	n(73,35,2),
	n(73.5,36,3),
	n(74,38,4),
	n(75,40,5),

	n(76,36,3),
	n(77,33,1),
	n(78,33,1),

	n(80.5,38,1),
	n(81.5,41,3),
	n(82,45,5),
	n(83,43,4),
	n(83.5,41,3),

	n(84,40,2),
	n(85.5,36,1),
	n(86,40,5),
	n(87,38,4),
	n(87.5,36,3),

	n(88,35,2),
	n(89,35,2),
	n(89.5,36,3),
	n(90,38,4),
	n(91,40,5),

	n(92,36,3),
	n(93,33,1),
	n(94,33,1),
}

notes2={
	n(0,24,1),
	n(1,26,2),
	n(2,28,3),
	n(3,29,4),
	n(4,31,5),
	n(6,24,1),
	n(6,28,3),
	n(6,31,5),
}

notes3={
	-- page 1
	-- line 2

	n(1,21,1),
	n(1.5,24,2),
	n(2,26,3),
	n(2.5,27,4),
	n(3,26,3),

	n(5,21,1),
	n(5.5,24,2),
	n(6,33,5),
	n(6.5,31,4),
	n(7,21,1),
	n(7,24,2),
	n(7,28,3),

	n(9,21,1),
	n(9.5,24,2),
	n(10,26,3),
	n(10.5,27,4),
	n(11,26,3),

	n(13,21,1),
	n(13.5,24,2),
	n(14,33,5),
	n(14.5,31,4),
	n(15,21,1),
	n(15,24,2),
	n(15,28,3),
	n(15.5,28,3),

	-- line 3

	n(16,33,5),
	n(17.5,33,5),
	n(18,28,3),
	n(19,33,5),

	n(20,30,4),
	n(21.5,30,4),
	n(22,28,3),
	n(23,26,2),

	n(24,21,1),
	n(24,24,2),
	n(24,28,3),

	n(31,28,3),

	-- line 4

	n(32,33,5),
	n(33.5,33,5),
	n(34,28,3),
	n(35,33,5),

	n(36,30,4),
	n(37.5,30,4),
	n(38,28,3),
	n(39,26,2),

	n(40,21,1),
	n(40,24,2),
	n(40,28,3),

	n(47,33,3),

	-- line 5

	n(48,38,5),
	n(49.5,38,5),
	n(50,33,3),
	n(51,38,5),

	n(52,35,4),
	n(53.5,35,4),
	n(54,33,3),
	n(55,31,2),

	n(56,33,1),
	n(56,38,3),

	n(63,28,3),

	-- line 6

	n(64,33,5),
	n(65.5,33,5),
	n(66,28,3),
	n(67,33,5),

	n(68,30,4),
	n(69.5,30,4),
	n(70,28,3),
	n(71,26,2),

	n(72,21,1),
	n(72,24,2),
	n(72,28,3),

	-- page 2
	-- line 1

	n(80,12,1),
	n(80.5,17,4),
	n(80.75,17,4),
	n(81,17,4),
	n(81.5,17,4),
	n(82,12,1),
	n(82.5,17,4),
	n(82.75,17,4),
	n(83,17,4),
	n(83.5,17,4),

	n(84,12,1),
	n(84.5,17,4),
	n(84.75,17,4),
	n(85,17,4),
	n(85.5,17,4),
	n(86,12,1),
	n(86.5,17,4),
	n(86.75,17,4),
	n(87,17,4),
	n(87.5,17,4),

	n(88,24,1),
	n(88,28,2),
	n(88,31,3),

	-- line 2

	n(96,12,1),
	n(96.5,17,4),
	n(96.75,17,4),
	n(97,17,4),
	n(97.5,17,4),
	n(98,12,1),
	n(98.5,17,4),
	n(98.75,17,4),
	n(99,17,4),
	n(99.5,17,4),

	n(100,12,1),
	n(100.5,17,4),
	n(100.75,17,4),
	n(101,17,4),
	n(101.5,17,4),
	n(102,12,1),
	n(102.5,17,4),
	n(102.75,17,4),
	n(103,17,4),
	n(103.5,17,4),

	n(104,24,1),
	n(104,28,2),
	n(104,31,3),

	-- line 3

	n(112,21,1),
	n(112,24,2),
	n(112,29,3),
	n(113,17,1),
	n(113,29,3),
	n(114,21,2),
	n(114,33,4),
	n(115,24,3),
	n(115,36,5),

	n(116,23,1),
	n(116,35,3),
	n(118,24,2),
	n(118,36,4),
	n(119,26,3),
	n(119,38,5),

	n(120,28,3),
	n(120,40,5),
	n(120.667,26,2),
	n(120.667,38,4),
	n(121.333,24,1),
	n(121.333,36,3),
	n(122,21,1),
	n(122,33,2),

	-- line 4

	n(128,21,1),
	n(128,24,2),
	n(128,29,3),
	n(129,17,1),
	n(129,29,3),
	n(130,21,2),
	n(130,33,4),
	n(131,24,3),
	n(131,36,5),

	n(132,23,1),
	n(132,35,3),
	n(134,24,2),
	n(134,36,4),
	n(135,26,3),
	n(135,38,5),

	n(136,19,2),
	n(136.5,19,2),
	n(136.75,19,2),
	n(137,19,2),
	n(137.5,19,2),
	n(138,20,3),
	n(138.5,19,2),
	n(139,20,3),
	n(139.5,19,2),

	n(140.5,19,2),
	n(140.75,19,2),
	n(141,19,2),
	n(141.5,19,2),
	n(142,20,3),
	n(142.5,19,2),
	n(143,20,3),
	n(143.5,19,2),

	-- line 5

	n(144,21,1),
	n(144,24,2),
	n(144,29,3),
	n(145,17,1),
	n(145,29,3),
	n(146,21,2),
	n(146,33,4),
	n(147,24,3),
	n(147,36,5),

	n(148,23,1),
	n(148,35,3),
	n(150,24,2),
	n(150,36,4),
	n(151,26,3),
	n(151,38,5),

	n(152,28,3),
	n(152,40,5),
	n(152.667,26,2),
	n(152.667,38,4),
	n(153.333,24,1),
	n(153.333,36,3),
	n(154,21,1),
	n(154,33,2),

	-- line 6

	n(160,12,1),
	n(160.5,17,4),
	n(160.75,17,4),
	n(161,17,4),
	n(161.5,17,4),
	n(162,12,1),
	n(162.5,17,4),
	n(162.75,17,4),
	n(163,17,4),
	n(163.5,17,4),

	n(164,12,1),
	n(164.5,17,4),
	n(164.75,17,4),
	n(165,17,4),
	n(165.5,17,4),
	n(166,12,1),
	n(166.5,17,4),
	n(166.75,17,4),
	n(167,17,4),
	n(167.5,17,4),

	n(168,21,1),
	n(168,24,2),
	n(168,28,3),

	-- page 3
	-- line 1

	n(176,12,1),
	n(176.5,17,4),
	n(176.75,17,4),
	n(177,17,4),
	n(177.5,17,4),
	n(178,12,1),
	n(178.5,17,4),
	n(178.75,17,4),
	n(179,17,4),
	n(179.5,17,4),

	n(180,12,1),
	n(180.5,17,4),
	n(180.75,17,4),
	n(181,17,4),
	n(181.5,17,4),
	n(182,12,1),
	n(182.5,17,4),
	n(182.75,17,4),
	n(183,17,4),
	n(183.5,17,4),

	n(184,24,1),
	n(184,28,2),
	n(184,31,3),

	n(191,28,3),

	-- line 2,

	n(192,33,5),
	n(193.5,33,5),
	n(193.75,33,5),
	n(194,28,3),
	n(195,33,5),

	n(196,30,4),
	n(197.5,30,4),
	n(197.75,30,4),
	n(198,28,3),
	n(199,26,2),

	n(200,21,1),
	n(200,24,2),
	n(200,28,3),

	n(207,28,3),

	-- line 3,

	n(208,33,5),
	n(209.5,33,5),
	n(209.75,33,5),
	n(210,28,3),
	n(211,33,5),

	n(212,30,4),
	n(213.5,30,4),
	n(213.75,30,4),
	n(214,28,3),
	n(215,26,2),

	n(216,21,1),
	n(216,24,2),
	n(216,28,3),

	n(223,33,3),

	-- line 4,

	n(224,38,5),
	n(225.5,38,5),
	n(225.75,38,5),
	n(226,33,3),
	n(227,38,5),

	n(228,35,4),
	n(228.5,35,4),
	n(228.75,35,4),
	n(229,35,4),
	n(229.5,35,4),
	n(230,33,3),
	n(231,31,2),

	n(232,38,5),
	n(232.5,33,3),

	n(239.5,28,3),

	-- line 5,

	n(240,33,5),
	n(241.5,33,5),
	n(241.75,33,5),
	n(242,28,3),
	n(243,33,5),

	n(244,30,4),
	n(245.5,30,4),
	n(245.75,30,4),
	n(246,28,3),
	n(247,26,2),

	n(248,21,1),
	n(248,24,2),
	n(248,28,3),

	-- line 6,

	n(256,21,1),
	n(256,24,2),
	n(256,29,3),
	n(257,17,1),
	n(257,29,3),
	n(258,21,2),
	n(258,33,4),
	n(259,24,3),
	n(259,36,5),

	n(260,23,1),
	n(260,35,3),
	n(262,24,2),
	n(262,36,4),
	n(263,26,3),
	n(263,38,5),

	n(264,28,3),
	n(264,40,5),
	n(264.667,26,2),
	n(264.667,38,4),
	n(265.333,24,1),
	n(265.333,36,3),
	n(266,21,1),
	n(266,33,2),

	-- page 4,
	-- line 1,

	n(272,21,1),
	n(272,24,2),
	n(272,29,3),
	n(273,17,1),
	n(273,29,3),
	n(274,21,2),
	n(274,33,4),
	n(275,24,3),
	n(275,36,5),

	n(276,23,1),
	n(276,35,3),
	n(278,24,2),
	n(278,36,4),
	n(279,26,3),
	n(279,38,5),

	n(280,19,2),
	n(280.5,19,2),
	n(280.75,19,2),
	n(281,19,2),
	n(281.5,19,2),
	n(282,20,3),
	n(282.5,19,2),
	n(283,20,3),
	n(283.5,19,2),

	n(284.5,19,2),
	n(284.75,19,2),
	n(285,19,2),
	n(285.5,19,2),
	n(286,20,3),
	n(286.5,19,2),
	n(287,20,3),
	n(287.5,19,2),

	-- line 2,

	n(288,21,1),
	n(288,24,2),
	n(288,29,3),
	n(289,17,1),
	n(289,29,3),
	n(290,21,2),
	n(290,33,4),
	n(291,24,3),
	n(291,36,5),

	n(292,23,1),
	n(292,35,3),
	n(294,24,2),
	n(294,36,4),
	n(295,26,3),
	n(295,38,5),

	n(296,28,3),
	n(296,40,5),
	n(296.667,26,2),
	n(296.667,38,4),
	n(297.333,24,1),
	n(297.333,36,3),
	n(298,21,1),
	n(298,33,2),

	-- line 3,

	n(304,24,1),
	n(304.5,29,4),
	n(304.75,29,4),
	n(305,29,4),
	n(305.5,29,4),
	n(306,24,1),
	n(306.5,29,4),
	n(306.75,29,4),
	n(307,29,4),
	n(307.5,29,4),

	n(308,24,1),
	n(308.5,29,4),
	n(308.75,29,4),
	n(309,29,4),
	n(309.5,29,4),
	n(310,24,1),
	n(310.5,29,4),
	n(310.75,29,4),
	n(311,29,4),
	n(311.5,29,4),

	n(312,33,1),
	n(312,36,2),
	n(312,40,3),

	-- line 4,

	n(320,17,1),
	n(320,29,2),
	n(322,21,2),
	n(322,33,3),

	n(324,24,3),
	n(324,36,4),
	n(326,29,4),
	n(326,41,5),

	n(328,28,3),
	n(328,40,4),

	-- line 5,

	n(337,21,1),
	n(337.5,24,2),
	n(338,26,3),
	n(338.5,27,4),
	n(339,26,3),

	n(341,21,1),
	n(341.5,24,2),
	n(342,33,5),
	n(342.5,31,3),
	n(343,21,1),
	n(343,24,2),
	n(343,28,3),

	n(345,21,1),
	n(345.5,24,2),
	n(346,26,3),
	n(346.5,27,4),
	n(347,26,3),

	n(349,21,1),
	n(349.5,24,2),
	n(350,33,5),
	n(350.5,31,4),
	n(351,21,1),
	n(351,24,2),
	n(351,28,3),

	-- line 6,

	n(353,21,1),
	n(353.5,24,2),
	n(354,26,3),
	n(354.5,27,4),
	n(355,26,3),

	n(357,21,1),
	n(357.5,24,2),
	n(358,33,5),
	n(358.5,31,4),
	n(359,21,1),
	n(359,24,2),
	n(359,28,3),

	n(361,21,1),
	n(361.5,24,2),
	n(362,26,3),
	n(362.5,27,4),
	n(363,26,3),

	n(365,21,1),
	n(365.5,24,2),
	n(366,21,1),
	n(366.5,24,2),
	n(367,21,1),

	n(369,21,1),
	n(369.5,24,2),
	n(370,21,1),
	n(370.5,24,2),
	n(371,21,1),
}

songs={
	{
		title="tetris theme",
		notes=notes1,
		tempo=120,
		hsidx=0
	},
	{
		title="apache - the shadows",
		notes=notes3,
		tempo=120,
		hsidx=2
	},
	{
		title="chords",
		notes=notes2,
		tempo=180,
		hsidx=1
	}
}
function s()
	return songs[song]
end

notep=1
shake=0

function _init()
	cartdata("guitarpico")
	menuitem(3,"reset scores",
		function()
			for i=1,#songs do
				dset(songs[i].hsidx,0)
			end
		end
	)
	poke(0x5f5c, 255) -- never repeat
	poke(0x5f2d, 1)   -- keyboard
end

function start_song(_song)
	start_time=t()
	song=_song
	screen="song"
	notep=1
	streak=0
	score=0
	longest_streak=0
	high_score=dget(s().hsidx)
	for p=1,#s().notes do
		s().notes[p].played=false
	end
	menuitem(1,"quit song",function() stop("title") end)
	menuitem(2,"restart song",function() stop("title") start_song(song) end)

--	start_time-=62*60/s().tempo
end

function _update60()
	if screen=="score" then
		update_score()
	elseif screen=="title" then
		update_title()
	else
		update_song()
	end
end

function update_score()
	if btnp(❎) then
		screen="title"
	end
end

function update_title()
	if btnp(❎) then
		start_song(songsel)
	elseif btnp(⬇️) then
		songsel=min(songsel+1,#songs)
	elseif btnp(⬆️) then
		songsel=max(songsel-1,1)
	end
end

function update_song()
	b=beat()
	if flr(b)!=lastbeat then
--		sfx(5,3)
		lastbeat=flr(b)
	end

	if btnp(❎) then
		if notep<#s().notes then
			k=s().notes[notep].string
		else
			k=0
		end
		handle_key(k)
	end

	while stat(30) do
		local k=stat(31)
		k=tonum(k)
		if k!=nil and k>=1 and k<=5 then
			handle_key(k)
		end
	end

	-- sound played notes that have passed
	while notep<=#s().notes and s().notes[notep].beat<b and s().notes[notep].played do
		play(s().notes[notep].pitch)
		notep+=1
	end

	-- drop missed notes that are too far passed
	while notep<=#s().notes and s().notes[notep].beat<b-0.2 do
		wrong_note()
		notep += 1
	end

	if beat()>s().notes[#s().notes].beat+2 then
		stop("score")
	end
end

function handle_key(k)
	if notep > #s().notes then
		wrong_note("past end")
		return
	end

	-- skip already-played notes
	local p=notep
	while p<=#s().notes and s().notes[p].played do
		p+=1
	end

	if p>#s().notes then
		wrong_note("all remaining notes played")
		return
	end

	-- search this chord to find an unplayed, matching string
	local cur=s().notes[p].beat	
	while p<=#s().notes and s().notes[p].beat==cur and (s().notes[p].string!=k or s().notes[p].played) do
		p+=1
	end

	if p>#s().notes or s().notes[p].beat>cur then
		wrong_note("not in chord")
		return
	end

	if abs(s().notes[p].beat-b)>0.2 then
		wrong_note("bad timing: "..(s().notes[p].beat-b))
		return
	end

	score+=5*mult()
	wnmsg=nil
	streak+=1
	if streak>longest_streak then
		longest_streak=streak
	end
	s().notes[p].played=true
end

function wrong_note(msg)
	sfx(-1)
	sfx(4,3)
	shake=4
	streak=0
	wnmsg=msg
end

function stop(_screen)
	screen=_screen
	sfx(-1)
	camera()
	menuitem(1)
	menuitem(2)
	if score > high_score then
		high_score = score
		dset(s().hsidx, high_score)
	end
end

function beat()
	return (t()-start_time)*s().tempo/60-4
end

function _draw()
	if screen=="title" then
		draw_title()
	elseif screen=="score" then
		draw_score()
	else
		draw_song()
	end
end

songsel=1
function draw_title()
	cls()
	map()
	for i=1,#songs do
		lprint(songs[i].title,30,70+10*i)
	end

	pal(7,0,0)
	pal(13,0,0)
	spr(0,20,69+10*songsel)
	pal()
	spr(0,19,68+10*songsel)
end

function draw_score()
	local notes_hit=0
	for p=1,#s().notes do
		if s().notes[p].played then
			notes_hit+=1
		end
	end

	local star_req={0.5,0.7,0.8,0.9,1}
	stars=0
	for r in all(star_req) do
		if notes_hit/#s().notes>=r then
			stars+=1
		end
	end

	rect(20,35,109,96,5)
	rect(19,34,108,95,10)
	rectfill(20,35,107,94,9)
	cprint("score: "..sfmt(score),40)
	cprint("notes: "..notes_hit.."/"..#s().notes,50)
	cprint("longest streak: "..longest_streak,60)
	cprint("high score: "..sfmt(high_score),84)

	pal(7,0,0)
	pal(13,0,0)
	for p=0,4 do
		spr(0,39+p*10,71)
	end

	pal()
	for p=0,stars-1 do
		spr(0,38+p*10,70)
	end
end

function cprint(str,y)
	local w=print(str,0,-20)
	lprint(str,63-w/2,y)
	return 63-w/2
end

function lprint(str,x,y)
	for i=0,2 do
		for j=0,2 do
			print(str,x+i,y+j,0)
		end
	end
	for i=-1,1 do
		for j=-1,1 do
			print(str,x+i,y+j,13)
		end
	end
	print(str,x,y,7)
end

color={11,8,10,12,9,3,2,4,1,4}
function draw_song()
	cls()
	if shake>0 then
		camera(rnd(2*shake)-shake,rnd(2*shake)-shake)
		shake-=1
	else
		camera(0,0)
	end

	-- draw strings and pots
	for i=0,4 do
		line(45.5+9*i,20,29.4+17*i,117,13)
		line(46.5+9*i,20,30.4+17*i,117,5)
		ovalfill(22+17*i,115,37+17*i,120,color[i+1])
		oval(24+17*i,116,35+17*i,119,color[i+6])
	end

	if streak>29 then
		xs=10
	else
		xs=streak%10
	end

	-- draw score, multipler, and streak
	print(sfmt(score),0,90,9)
	print(mult().."x",4,99,9)
--	for i=1,xs do
--		print(chr(127),108-1*i,113-5*i,12)
--	end
	rect(111,74,116,106,1)
	rectfill(112,105-3*xs,115,105,12)

	-- draw upcoming beats
	local b=beat()
	for bb=ceil(b),b+5 do
		local y=ymap(bb-b)
		if y<111 then
		local x=xmap(y,0)
		local f=fmap(y)-0.25
			line(x,y+f*5,128-x,y+f*5,5)
			print(bb,132-x,y+f*5-2,7)
		end
	end

	-- draw upcoming notes
	local p=notep
	while p<=#s().notes and s().notes[p].beat < b+5 do
		local y=ymap(s().notes[p].beat-b)
		local f=fmap(y)
		local x=xmap(y,s().notes[p].string-1)

		if s().notes[p].played then
			col=7
		else
			col=color[s().notes[p].string]
		end
		ovalfill(x-f*7.5,y,x+f*7.5,y+f*5,col)
		p += 1
	end
end

function fmap(y)
	return 0.5+(y-20)/190
end

function ymap(d)
	local theta=1-atan2(d+2, 2)
	y=sin(theta-0.08465)
	return 67.5-190*y
end

function xmap(y,string)
	return 63.5+fmap(y)*17*(string-2)
end

channel=0
function play(pitch)
	chnote(channel, pitch)
	sfx(channel,channel)
	channel=(channel+1)%4
end

function chnote(pos, pitch)
	for i=0,31 do
		local p=0x3200+68*pos+i*2
		local v=peek2(p)
		v=band(v,0xffc0)+pitch
		poke2(p, v)
	end
end

function mult()
	return min(4,1+streak\10)
end

function sfmt(str)
	if str==0 then
		return "0"
	else
		return str.."0"
	end
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000009999999999999999999999999999999999999999999999999999999999999999
0ddddd00000000000000000000000000000000000000000000000000000000009999999999999999999999999999999999999999999999999999999999999999
d7d7d7d0000000000000000000000000000000000000000000000000000000009999999999d99999999999999999999999999999999999999999999999999999
dd777dd000000000000000000000000000000000000000000000000000000000999999999d0d9999999999999999999999999999999999999999999999999999
0dd7dd000000000000000000000000000000000000000000000000000000000099ddddddd0d0ddddddd999999999999999999999999999999999999999999999
dd777dd00000000000000000000000000000000000000000000000000000000099d000000d6d0000000d99999999999999999999999999999999999999999999
d7d7d7d00000000000000000000000000000000000000000000000000000000099d0d66667777776d0d999999900000000000009090000000d99999999999999
0ddddd000000000000000000000000000000000000000000000000000000000099d0d6777dd7776d0d999999900dddddddddddd0d0666666d00d999999999999
000000000000000000000000000000000000000000000000000000000000000099d0d677d007776d0000dddd00d6666766666d0d7d06776677d0d99999999999
000000000000000000000000000000000000000000000000000000000000000099d0d677d007776d666d0000000000676dddd0d777d06760d67d099999999999
000000000000000000000000000000000000000000000000000000000000000099d0d677d007776d677d0d6660ddd0676d000d7d76d0676006760d9999999999
000000000000000000000000000000000000000000000000000000000000000099d06777d00dddd0d77d0d76d067d0676d0d77d076d067600d76d09999999999
00000000000000000000000000000000000000000000000000000000000000009d0d6777d0000000d77d0d76d067d0676d077d0076d06760d676d09999999999
0000000000000000000000000000000000000000000000000000000000000000d00d6777d0d6776d077d0d76d067d0676d067d0076d06766766d0d9999999999
00000000000000000000000000000000000000000000000000000000000000009d0d6777d006776d077d0d76d067d0676d067d0076d0677776d0d99999999999
000000000000000000000000000000000000000000000000000000000000000099d0d677d006776d077d0d76d067d0676d06776676d0676d77d0999999999999
000000000000000000000000000000000000000000000000000000000000000099d0d677d006776d077d0d76d067d0676d067d0d76d0676067d0d99999999999
000000000000000000000000000000000000000000000000000000000000000099d0d677d006776d06770d76d067d0676d067d0076d06760d76d099999999999
000000000000000000000000000000000000000000000000000000000000000099d0d6777006776d00d76676d067d0676d067d0076d066600d760d9999999999
000000000000000000000000000000000000000000000000000000000000000099d0d6777777776dd0000666d0ddd06760066d0076d0dddd0d760d9999999999
000000000000000000000000000000000000000000000000000000000000000099d0d66dddd6776d0d77d000000000dd0000000076d0000000d7d0d999999999
000000000000000000000000000000000000000000000000000000000000000099d0ddd0000d77d0d777d0d666660d00ddd0000dddd0d660000d7d0d99999999
000000000000000000000000000000000000000000000000000000000000000099d0d00ddd0d76d0d777d0d7776d00d777777dd0000d677d0000d6600d999999
000000000000000000000000000000000000000000000000000000000000000099d00d999d0d6d0d7777d0d7776d0d677777777d06777777d000000dd000d999
000000000000000000000000000000000000000000000000000000000000000099d0d9999d06d0d77777d0d7776d0d677777777d067776d7776d0dddddddddd9
000000000000000000000000000000000000000000000000000000000000000099dd999990dd0d777777d0d7776d0d677766777d06776d06776d099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d0d777dd77d0d7776d0d677600677d06776d06776d099999999999
0000000000000000000000000000000000000000000000000000000000000000999999990d0d777d0d77d0d7776d0d776d00677d06776d06776d099999999999
00000000000000000000000000000000000000000000000000000000000000009999999d00d777700d77d0d77760d6776d00d66d06776d06776d099999999999
0000000000000000000000000000000000000000000000000000000000000000999999900d7777d00777d0d7776d0d776d00000007776d06776d0d9999999999
00000000000000000000000000000000000000000000000000000000000000009999990000d777d0d777d0d7776d0d676d00000006776d067776d0d999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777777777d0d7776d0d676d00000006776d06776d0d9999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d77777777d00d7776d0d676d00d66d06776d06776d099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d7777777d0d0d7776d0d676d00677d06776d06776d099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777777dd090d7776d0d677600677d06776d06776d099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d7777ddd0d90d7776d0d677766777d06776d06776d099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777d000d990d7776d0d677777777d0dd776d7776d099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777d0d99990d7776d0066777777dd000d67777ddd099999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777d0d99990d7776d09d677777d000dd00667d000d99999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777d0d9999066666d09dd6677d00d999d0ddd0999999999999999
000000000000000000000000000000000000000000000000000000000000000099999999d0d777d0d9999000000009900ddd0d999999d0009999999999999999
00000000000000000000000000000000000000000000000000000000000000009999999d0d7777d0d999999999999999d000d99999999d0d9999999999999999
0000000000000000000000000000000000000000000000000000000000000000999999d0dddddddd0d999999999999999d0d9999999999d99999999999999999
0000000000000000000000000000000000000000000000000000000000000000999990000000000000d999999999999999d99999999999999999999999999999
00000000000000000000000000000000000000000000000000000000000000009999999999999999999999999999999999999999999999999999999999999999
00000000000000000000000000000000000000000000000000000000000000009999999999999999999999999999999999999999999999999999999999999999
00000000000000000000000000000000000000000000000000000000000000009999999999999999999999999999999999999999999999999999999999999999
00000000000000000000000000000000000000000000000000000000000000009999999999999999999999999999999999999999999999999999999999999999
__map__
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f08090a0b0c0d0e0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f18191a1b1c1d1e0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f28292a2b2c2d2e2f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f38393a3b3c3d3e3f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f48494a4b4c4d4e0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f58595a5b5c5d5e0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010300001831018320180301804018040180401803018030180301803018030180301802018020180201802018020180201802018020180101801018010180101801018010180100000000000000000000000000
010300001831018320180301804018040180401803018030180301803018030180301802018020180201802018020180201802018020180101801018010180101801018010180100000000000000000000000000
010300001831018320180301804018040180401803018030180301803018030180301802018020180201802018020180201802018020180101801018010180101801018010180100000000000000000000000000
010300001831018320180301804018040180401803018030180301803018030180301802018020180201802018020180201802018020180101801018010180101801018010180100000000000000000000000000
2f02000008250162500b650062500c25002250036500c250012500f25005650042500e250002500d2500365000250002000020000200002000020000200002000020000200002000020000200002000020000200
100100002b67028650266502662025620246102161020600206000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600
